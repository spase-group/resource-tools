/**
 * Processes information generated from Refcheck and Validator to produce
 * a more readable report.
 *
 * @author Todd King
 * @version 1.0: Reporter.java 1 2012-02-17
 */

package org.spase.tools;

import java.io.FileOutputStream;
import java.io.PrintStream;
import java.io.InputStream;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;

import java.util.ArrayList;

import org.xml.sax.helpers.DefaultHandler;


// import org.apache.commons.cli.*;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.PosixParser;
import org.apache.commons.cli.HelpFormatter;

public class Reporter extends DefaultHandler
{
	private String	mVersion = "1.0.0";
	
	private boolean mVerbose = false;

	// create the Options
	Options mOptions = new Options();

	public Reporter() 
	{
		mOptions.addOption( "h", "help", false, "Display this text" );
		mOptions.addOption( "v", "verbose", false, "Verbose. Show status at each step" );
		mOptions.addOption( "i", "input", true, "File name for the input file. This is the log generated by Refcheck or Validator. (Default: stdin)");
		mOptions.addOption( "o", "output", true, "File name for the generated report. (Default: stdout).");
	}
		
    /** 
	 * Process the output log and generate a report.
	 *<p>
	 * Usage:<blockquote>
	 *     Reporter [-i input] [-o output]
	 * </blockquote>
	 *
	 * @since		1.0
	 */
	public static void main(String args[])
   {
		Reporter me = new Reporter();
		
		/* Don't show help by default
		if (args.length < 1) {
			me.showHelp();
			System.exit(1);
		}
		*/
		
		String	inputFile = "";
		String	outputFile = "";
		

		CommandLineParser parser = new PosixParser();
		try { // parse the command line arguments
			CommandLine line = parser.parse(me.mOptions, args);

			if(line.hasOption("h")) me.showHelp();
			if(line.hasOption("v")) me.mVerbose = true;
			if(line.hasOption("i")) inputFile = line.getOptionValue("i");
			if(line.hasOption("o")) outputFile = line.getOptionValue("o");
			
			InputStream inStream = System.in;
			if(inputFile.length() > 0) {
				if(me.mVerbose)System.out.println("Opening for input: " + inputFile); 
				inStream = new FileInputStream(inputFile);				
			}
			BufferedReader reader = new BufferedReader(new InputStreamReader(inStream));

			// Output file
			PrintStream out = System.out;
			if(outputFile.length() > 0) {	// Open file for reading
				if(me.mVerbose)System.out.println("Opening for output: " + outputFile); 
				out = new PrintStream(new FileOutputStream(outputFile));
			}
			
			ArrayList<String> message = new ArrayList<String>();
			String	buffer = "";
			while((buffer = reader.readLine()) != null) {
				if(buffer.startsWith("[FAILED]")) {
					out.println(buffer.substring(8).trim());
					for(String msg : message) {
						out.println(msg);
					}
					out.println("");
					message.clear();
				} else if(buffer.startsWith("[INFO]")) {
						out.println(buffer);
				} else {
					if(buffer.startsWith("Line") || buffer.startsWith("   [INVALID]")) message.add(buffer);
				}
			}

		} catch (Exception e) {
			e.printStackTrace(System.out);
		}
   }

	/**
	 * Display help information.
	 **/
	public void showHelp()
	{
		System.out.println("");
		System.out.println(getClass().getName() + "; Version: " + mVersion);
		System.out.println("SPASE Report Generator.");
		System.out.println("");
		System.out.println("Processes information generated from Refcheck and Validator to produce");
		System.out.println("a more readable report.");
		System.out.println("");
		
		// automatically generate the help statement
		HelpFormatter formatter = new HelpFormatter();
		formatter.printHelp("java " + getClass().getName() + " [options]", mOptions);

		System.out.println("");
		System.out.println("Acknowledgements:");
		System.out.println("Development funded by NASA's VMO project at UCLA.");
	}
}